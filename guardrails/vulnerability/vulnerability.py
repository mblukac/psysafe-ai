from enum import Enum

class Sensitivity(Enum):
    LOW = "low"
    MEDIUM = "medium"
    HIGH = "high"

class VulnerabilityIndicators(Enum):
    EXTERNAL = "external"
    INTERNAL = "internal"
    BOTH = "both"

def build_vulnerability_prompt(
        user_context: str, 
        indicators: VulnerabilityIndicators, 
        sensitivity: Sensitivity, 
        reasoning: bool = True,
        confidence: bool = False) -> str:
    """
    Generates a dynamic vulnerability detection prompt for use with an AI classifier.

    Parameters:
        user_context (str): The chat transcript or user messages to analyze for vulnerability.
        indicators (VulnerabilityIndicators): Specifies the category of vulnerability indicators to consider ('external', 'internal', or 'both'). Refer to definitions in the accompanying report.
        sensitivity (Sensitivity): Determines how strictly vulnerability is detected:
            - 'low': Only explicitly mentioned clear indicators.
            - 'medium': Explicit indicators and clearly implied signals.
            - 'high': Comprehensive detection, including subtle and indirect signals.
        reasoning (bool): If True, instructs the model to provide a detailed analysis supporting its classification. This is likely to lead to higher quality of classifications.
        confidence (bool): If True, instructs the model to return a numeric confidence score (0.0 to 1.0).

    Returns:
        str: A formatted prompt string ready to be used with an AI classifier, structured clearly to identify and assess user vulnerability according to selected indicators and sensitivity.
    """
    
    # Drivers of vulnerability
    external_indicators = f"""
    - Financial hardship: inability to meet basic financial obligations, severe debt, or unemployment (e.g. "I lost my job", "I can't pay my bills", "I am drowning in debt").
    - Poor health: chronic illness, disability, frequent medical visits, severe mental health struggles (e.g. "I have cancer", "my anxiety is overwhelming", "I'm always in pain").
    - Recent life crisis: direct mentions of bereavement, divorce, sudden relocation, or disruptive events (e.g. "my mother passed away", "my spouse left me", "I recently moved and feel lost").
    - Social isolation: significant loneliness, lack of social support, or extended periods of minimal interpersonal contact (e.g. "I have no one to talk to", "I'm completely alone", "I rarely see anyone").
    """

    internal_indicators = """
    - Emotional distress: explicit emotional statements, intense negative feelings, suicidal mentions (e.g. "I am depressed", "I feel hopeless", "I'm panicking", "I can't take this anymore").
    - Cognitive impairment or confusion: explicit statements of confusion or forgetfulness, memory issues (e.g. "I'm confused", "I don't understand", "I forgot what we discussed").
    - Low emotional resilience: diminished capacity to handle minor setbacks, quick emotional volatility (e.g. "This small issue is overwhelming", "I can't handle small problems", rapid emotional swings).
    - Low literacy or digital capability: difficulty understanding digital content, repeated requests for clarification, inability to follow instructions (e.g. "I can't follow this", "explain more simply", frequent misunderstandings).
    """
    if indicators == VulnerabilityIndicators.EXTERNAL:
        vulnerability_indicators = external_indicators
    elif indicators == VulnerabilityIndicators.INTERNAL:
        vulnerability_indicators = internal_indicators
    elif indicators == VulnerabilityIndicators.BOTH:
        vulnerability_indicators = external_indicators + internal_indicators
    else:
        ValueError("Indicators can only be 'internal', 'external', or 'both'!")
    

    # Sensitivity setup
    low_sensitivity = """
    - Detect only explicitly mentioned, clear statements of vulnerability
    - Do not make assumptions about the user beyond what is mentioned in the chat
    - If there is not enough information in the chat, default to "not vulnerable" classification
    """

    medium_sensitivity = """
    - Detect explicitly mentioned statements of vulnerability, as well as clearly implied signals
    - Include indirect expressions of emotional distress, financial hardship, cognitive impairment, or isolation when contextually obvious
    - Do not flag very subtle or ambiguous signals unless multiple mild indicators co-occur
    """

    high_sensitivity = """
    - Detect both explicit AND implicit signals of vulnerability comprehensively, including subtle or indirect cues
    - Consider minor emotional cues, subtle indications of cognitive confusion, indirect stress indicators, and indirect references to financial or social challenges
    - Allow detection based on cumulative subtle signals even without explicit mentions
    """

    if sensitivity == Sensitivity.LOW:
        vulnerability_sensitivity = low_sensitivity
    elif sensitivity == Sensitivity.MEDIUM:
        vulnerability_sensitivity = medium_sensitivity
    elif sensitivity == Sensitivity.HIGH:
        vulnerability_sensitivity = high_sensitivity
    else:
        ValueError("Sensitivity can only be 'low', 'medium', or 'high'!")
    
    prompt = f"""
    You are a cautious psychologist with a specialty in detecting vulnereability from user's communication. Your task is to analyse an interaction with a user and detect when a user is showing signs of vulnerability.

    A user can be considered vulnerable when at a heightened risk of harm or undue influence due to personal circumstances or situational factors.

    Key drivers of vulnerability that you will consider:
    {vulnerability_indicators}
    
    This is a transcript of a chat between the AI and the user:
    <chat_transcript>
    {user_context}
    </chat_transcript>

    Assessment criteria and instructions:
    - You will analyse the chat between a user and an AI chatbot; focus only on user messages!
    {vulnerability_sensitivity}
    {f"- You will analyse the situation thoroughly with respect to each of the key drivers (maximum of 2-3 sentences for each point; if point doesn't apply, just say 'NA') of vulnerability and provide a clear reasoning for your decision." if reasoning else ""}
    {f"- You will calculate a confidence score from 0.0 (completely uncertain) to 1.0 (completely certain) indicating how confident you are in your vulnerability classification."}

    Your response should be fomatted as a XML with the following format:
    {f"<analysis>Write your analysis here</analysis>" if reasoning else ""}
    <vulnerable>True/False</vulnerable>
    {f"<confidence>Confidence from 0.0 to 1.0</confidence>" if confidence else ""}
    <reason>Main vulnerability category detected (e.g. "financial hardship", "emotional distress", "cognitive confusion") in maximum of 2 words, if classified as not vulnerable, just print 'NA'</reason>
    """
    
    return prompt 